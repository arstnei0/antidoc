---
import "~/style/base.css"
import "~/style/typo.css"
import { z } from "zod"
import { config } from "config"
import Header from "~/components/layout/header/Header.astro"
export interface Props {
	title?: string
	lang?: string
	mainClass?: string
}

const { title, lang = "en", mainClass } = Astro.props
---

<html lang={lang}>
	<head>
		<meta charset="utf-8" />
		<link rel="icon" href={config.favicon} />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>
			{title ? `${title}${config.titleSeparator}${config.title}` : `${config.title}`}
		</title>

		<link rel="preconnect" href="https://fonts.googleapis.com" />
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
		<link
			href="https://fonts.googleapis.com/css2?family=JetBrains+Mono:ital,wght@0,200;0,300;0,400;0,500;0,600;0,700;1,200;1,300;1,400;1,500;1,600;1,700&family=Noto+Serif:ital,wght@0,400;0,700;1,400;1,700&family=Poppins:ital,wght@0,300;0,400;0,500;0,600;0,700;1,300;1,400;1,500;1,600;1,700&display=swap"
			rel="stylesheet"
		/>

		{/* dark and light mode */}
		<script is:inline>
			const itemKey = "m"
			const $ = localStorage.getItem(itemKey)
			if (!$)
				localStorage.setItem(
					itemKey,
					globalThis.matchMedia &&
						globalThis.matchMedia("(prefers-color-scheme: dark)").matches
						? "d"
						: "l",
				)
			const mode = $ ?? localStorage.getItem(itemKey)
			document.documentElement.classList.add(mode)
			globalThis.m = mode
		</script>
	</head>
	<body>
		<Header />

		<main class={mainClass ?? ""}>
			<slot />
		</main>
	</body>
</html>
